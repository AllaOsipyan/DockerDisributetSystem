version: '3.8'

services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
     - "8080:8080"
    links:
      - queue
    depends_on:
      - db
      - queue
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/database
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234556789
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_NAME=first
      - RABBIT_CONNECTION=queue
  app2:
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - queue
    depends_on:
      - db
      - queue
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/database
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234556789
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_NAME=second
      - RABBIT_CONNECTION=queue
  nginx:
    build: nginx/.
    ports:
      - "8500:80"
    links:
      - app1
      - app2
  queue:
    image: rabbitmq:management
    hostname: rabbit
    ports:
      - "15672:15672"
    volumes:
      - rabbitvolume:/varlib/rabbitmq/
  loader:
    build:
      context: .
      dockerfile: Dockerfile-rabbit
    environment:
      - RABBIT_CONNECTION=queue
    links:
      - queue
  redis:
    image: redis
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234556789
      - POSTGRES_DB=database
    ports:
      -  "5432"
    volumes:
      - "postgres_db:/var/lib/postgresql/data/"
volumes:
  postgres_db:
  rabbitvolume: